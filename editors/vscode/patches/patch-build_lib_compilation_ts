Build with defaults _pbuild limits.
Remove mangle (vscode minifier).
https://github.com/VSCodium/vscodium/blob/master/patches/remove-mangle.patch
https://code.visualstudio.com/blogs/2023/07/20/mangling-vscode

Index: build/lib/compilation.ts
--- build/lib/compilation.ts.orig
+++ build/lib/compilation.ts
@@ -16,8 +16,6 @@ import ansiColors from 'ansi-colors';
 import os from 'os';
 import File from 'vinyl';
 import * as task from './task';
-import { Mangler } from './mangle/index';
-import { RawSourceMap } from 'source-map';
 import { gulpPostcss } from './postcss';
 import ts = require('typescript');
 const watch = require('./watch');
@@ -61,7 +59,7 @@ export function createCompile(src: string, { build, em
 	}
 
 	const compilation = tsb.create(projectPath, overrideOptions, {
-		verbose: false,
+		verbose: true,
 		transpileOnly: Boolean(transpileOnly),
 		transpileWithSwc: typeof transpileOnly !== 'boolean' && transpileOnly.esbuild
 	}, err => reporter(err));
@@ -136,31 +134,7 @@ export function compileTask(src: string, out: string, 
 			generator.execute();
 		}
 
-		// mangle: TypeScript to TypeScript
-		let mangleStream = es.through();
-		if (build && !options.disableMangle) {
-			let ts2tsMangler = new Mangler(compile.projectPath, (...data) => fancyLog(ansiColors.blue('[mangler]'), ...data), { mangleExports: true, manglePrivateFields: true });
-			const newContentsByFileName = ts2tsMangler.computeNewFileContents(new Set(['saveState']));
-			mangleStream = es.through(async function write(data: File & { sourceMap?: RawSourceMap }) {
-				type TypeScriptExt = typeof ts & { normalizePath(path: string): string };
-				const tsNormalPath = (<TypeScriptExt>ts).normalizePath(data.path);
-				const newContents = (await newContentsByFileName).get(tsNormalPath);
-				if (newContents !== undefined) {
-					data.contents = Buffer.from(newContents.out);
-					data.sourceMap = newContents.sourceMap && JSON.parse(newContents.sourceMap);
-				}
-				this.push(data);
-			}, async function end() {
-				// free resources
-				(await newContentsByFileName).clear();
-
-				this.push(null);
-				(<any>ts2tsMangler) = undefined;
-			});
-		}
-
 		return srcPipe
-			.pipe(mangleStream)
 			.pipe(generator.stream)
 			.pipe(compile())
 			.pipe(gulp.dest(out));
