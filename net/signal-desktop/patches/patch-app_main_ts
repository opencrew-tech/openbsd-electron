Index: app/main.ts
--- app/main.ts.orig
+++ app/main.ts
@@ -616,7 +616,7 @@ let windowIcon: string;
 
 if (OS.isWindows()) {
   windowIcon = join(__dirname, '../build/icons/win/icon.ico');
-} else if (OS.isLinux()) {
+} else if (OS.isLinux() || OS.isBSD()) {
   windowIcon = join(__dirname, '../images/signal-logo-desktop-linux.png');
 } else {
   windowIcon = join(__dirname, '../build/icons/png/512x512.png');
@@ -666,6 +666,8 @@ async function safeLoadURL(window: BrowserWindow, url:
 }
 
 async function createWindow() {
+// XXX debug
+//const usePreloadBundle = false;
   const usePreloadBundle =
     !isTestEnvironment(getEnvironment()) || forcePreloadBundle;
 
@@ -1009,7 +1011,7 @@ async function createWindow() {
     }
   };
 
-  if (OS.isLinux() && OS.isWaylandEnabled()) {
+  if ((OS.isLinux() || OS.isBSD()) && OS.isWaylandEnabled()) {
     mainWindow.webContents.once('did-finish-load', async () => {
       log.info('main window webContents did-finish-load');
       drop(maybeShowMainWindow());
@@ -1612,7 +1614,7 @@ function generateSQLKey(): string {
 
 function getSQLKey(): string {
   let update = false;
-  const isLinux = OS.isLinux();
+  const isLinux = (OS.isLinux() || OS.isBSD());
   const legacyKeyValue = userConfig.get('key');
   const modernKeyValue = userConfig.get('encryptedKey');
   const previousBackend = isLinux
@@ -1945,7 +1947,7 @@ const featuresToDisable = `HardwareMediaKeyHandling,${
 )}`;
 app.commandLine.appendSwitch('disable-features', featuresToDisable);
 
-if (OS.isLinux()) {
+if (OS.isLinux() || OS.isBSD()) {
   // https://github.com/electron/electron/issues/46538#issuecomment-2808806722
   app.commandLine.appendSwitch('gtk-version', '3');
 }
@@ -2570,7 +2572,7 @@ ipc.on('draw-attention', () => {
     return;
   }
 
-  if (OS.isWindows() || OS.isLinux()) {
+  if (OS.isWindows() || OS.isLinux() || OS.isBSD()) {
     mainWindow.flashFrame(true);
   }
 });
